{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaot\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\prjQuickDev\\\\view_movies\\\\src\\\\components\\\\apiMovies.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Movie extends Component {\n  constructor(props) {\n    super();\n\n    this.componentDidMount = () => {\n      this.getMovies();\n      this.getGenres();\n    };\n\n    this.getMovies = () => {\n      this.setState({\n        valueFilter: ''\n      });\n      const request = axios.get(\"https://api.themoviedb.org/3/movie/popular?api_key=\" + this.state.api_key);\n      request.then(resp => {\n        this.setState({\n          movie: resp.data.results\n        }); //console.log(this.state.movie.sort())\n      });\n    };\n\n    this.getGenres = () => {\n      const request = axios.get(\"https://api.themoviedb.org/3/genre/movie/list?api_key=\" + this.state.api_key);\n      request.then(respGenres => {\n        this.setState({\n          genres: respGenres.data.genres\n        }); //console.log(this.state.genres)\n      });\n    };\n\n    this.mountArrayGenres = () => {\n      let arrayGenres = [];\n      this.state.genres.forEach(element => {\n        arrayGenres[element.id] = element.name;\n      });\n      return arrayGenres;\n    };\n\n    this.filterGenreTitle = event => {\n      if (event.target !== undefined) {\n        this.setState({\n          valueFilter: event.target.value\n        });\n\n        if (this.state.valueFilter.indexOf(' ') >= 0) {\n          this.setState({\n            valueFilter: this.state.valueFilter.replace(' ', '+')\n          });\n        }\n      }\n    };\n\n    this.state = {\n      movie: [],\n      genres: [],\n      api_key: \"4ec327e462149c3710d63be84b81cf4f\",\n      valueFilter: ''\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.valueFilter.indexOf(' ') >= 0) {\n      this.setState({\n        valueFilter: this.state.valueFilter.replace(' ', '+')\n      });\n    }\n\n    if (this.state.valueFilter.length > 0) {\n      const request = axios.get(\"https://api.themoviedb.org/3/search/movie?api_key=\" + this.state.api_key + \"&query=\" + this.state.valueFilter);\n      request.then(resp => {\n        this.setState({\n          movie: resp.data.results\n        });\n      });\n      console.log(this.state.valueFilter);\n    }\n  }\n\n  render() {\n    const arrayGenres = this.mountArrayGenres();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div-filter\",\n        children: [\"Filter for Genre or Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"div-filter-input\",\n          type: \"text\",\n          onChange: this.filterGenreTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), this.state.movie.map(data => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div-movies\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: data.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"http://image.tmdb.org/t/p/w185/\" + data.poster_path,\n              alt: data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Release Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 39\n              }, this), \" \", data.release_date, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Genre:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 39\n              }, this), \" \", data.genre_ids.map(genre => {\n                return arrayGenres[genre] + \" / \";\n              }), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div-overview\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: data.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 32\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["C:/Users/joaot/OneDrive/√Årea de Trabalho/prjQuickDev/view_movies/src/components/apiMovies.js"],"names":["React","Component","axios","Movie","constructor","props","componentDidMount","getMovies","getGenres","setState","valueFilter","request","get","state","api_key","then","resp","movie","data","results","respGenres","genres","mountArrayGenres","arrayGenres","forEach","element","id","name","filterGenreTitle","event","target","undefined","value","indexOf","replace","componentDidUpdate","length","console","log","render","map","title","poster_path","release_date","genre_ids","genre","overview"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Movie extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            movie: [],\r\n            genres: [],\r\n            api_key: \"4ec327e462149c3710d63be84b81cf4f\",\r\n            valueFilter: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getMovies()\r\n        this.getGenres()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n        if (this.state.valueFilter.indexOf(' ') >= 0) {\r\n            this.setState({ valueFilter: this.state.valueFilter.replace(' ', '+') });\r\n        }\r\n\r\n        if (this.state.valueFilter.length > 0) {\r\n            const request = axios.get(\"https://api.themoviedb.org/3/search/movie?api_key=\" + this.state.api_key+\"&query=\" +  this.state.valueFilter)\r\n            request.then((resp) => {\r\n                this.setState({ movie: resp.data.results });\r\n            })\r\n\r\n            \r\n            console.log(this.state.valueFilter)\r\n        }\r\n\r\n       \r\n    }\r\n\r\n    getMovies = () => {\r\n\r\n        this.setState({ valueFilter: '' });\r\n\r\n        const request = axios.get(\"https://api.themoviedb.org/3/movie/popular?api_key=\" + this.state.api_key)\r\n        request.then((resp) => {\r\n            this.setState({ movie: resp.data.results });\r\n            //console.log(this.state.movie.sort())\r\n\r\n        })\r\n    }\r\n\r\n    getGenres = () => {\r\n        const request = axios.get(\"https://api.themoviedb.org/3/genre/movie/list?api_key=\" + this.state.api_key)\r\n        request.then((respGenres) => {\r\n            this.setState({ genres: respGenres.data.genres });\r\n            //console.log(this.state.genres)\r\n\r\n        })\r\n    }\r\n\r\n    mountArrayGenres = () => {\r\n        let arrayGenres = []\r\n        this.state.genres.forEach(element => {\r\n            arrayGenres[element.id] = element.name\r\n        });\r\n\r\n        return arrayGenres\r\n    }\r\n\r\n    filterGenreTitle = (event) => {\r\n        if (event.target !== undefined) {\r\n\r\n            this.setState({ valueFilter: event.target.value });\r\n\r\n            if (this.state.valueFilter.indexOf(' ') >= 0) {\r\n                this.setState({ valueFilter: this.state.valueFilter.replace(' ', '+') });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const arrayGenres = this.mountArrayGenres()\r\n        return (\r\n            <div>\r\n                <div className=\"div-filter\">\r\n\r\n                    Filter for Genre or Title:\r\n                        <input\r\n                        class=\"div-filter-input\"\r\n                        type=\"text\"\r\n                        onChange={this.filterGenreTitle}\r\n                    />\r\n\r\n                </div>\r\n                {\r\n                    this.state.movie.map((data) => {\r\n                        return <div className=\"div-movies\">\r\n                            <div>\r\n                                <span><b>{data.title}</b></span>\r\n                            </div>\r\n                            <div>\r\n                                <img src={\"http://image.tmdb.org/t/p/w185/\" + data.poster_path} alt={data.title} />\r\n                            </div>\r\n                            <div>\r\n                                <span><b>Release Date:</b> {data.release_date} </span>\r\n                                <span><b>Genre:</b> {\r\n                                    data.genre_ids.map((genre) => {\r\n                                        return arrayGenres[genre] + \" / \"\r\n                                    })\r\n                                } </span>\r\n                            </div>\r\n                            <div id=\"div-overview\">\r\n                                <span>{data.overview}</span>\r\n                            </div>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Movie;"]},"metadata":{},"sourceType":"module"}