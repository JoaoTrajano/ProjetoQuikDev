{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaot\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\prjQuickDev\\\\view_movies\\\\src\\\\components\\\\apiMovies.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Movie extends Component {\n  constructor(props) {\n    super();\n\n    this.componentDidMount = () => {\n      this.getMovies();\n      this.getGenres(); //this.getApiKey()\n    };\n\n    this.getMovies = () => {\n      axios.get(\"http://127.0.0.1:8000/api/movies\").then(resp => {\n        //this.setState({ genres: respGenres.data.genres });\n        console.log(resp); // let args = Array.prototype.slice.call(resp.data.results);\n        // args = [].slice.call(resp.data.results);\n        // args = Array.from(resp.data.results);\n        // args.sort(function (a, b) {\n        //     return (a.title > b.title) ? 1 : ((b.title > a.title) ? -1 : 0);\n        // });\n        // this.setState({ movie: args });\n      });\n    };\n\n    this.getGenres = () => {\n      const request = axios.get(\"https://api.themoviedb.org/3/genre/movie/list?api_key=\" + this.state.api_key);\n      request.then(respGenres => {\n        this.setState({\n          genres: respGenres.data.genres\n        }); //console.log(this.state.genres)\n      });\n    };\n\n    this.mountArrayGenres = () => {\n      let arrayGenres = [];\n      this.state.genres.forEach(element => {\n        arrayGenres[element.id] = element.name;\n      });\n      return arrayGenres;\n    };\n\n    this.filterGenreTitle = event => {\n      this.setState({\n        valueFilter: event.target.value\n      });\n\n      if (this.state.valueFilter.indexOf(' ') >= 0) {\n        this.setState({\n          valueFilter: this.state.valueFilter.replace(' ', '+')\n        });\n      }\n    };\n\n    this.state = {\n      movie: [],\n      genres: [],\n      api_key: \"4ec327e462149c3710d63be84b81cf4f\",\n      valueFilter: ''\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.valueFilter.indexOf(' ') >= 0) {\n      this.setState({\n        valueFilter: this.state.valueFilter.replace(' ', '+')\n      });\n    }\n\n    if (this.state.valueFilter.length > 0) {\n      const request = axios.get(\"https://api.themoviedb.org/3/search/movie?api_key=\" + this.state.api_key + \"&query=\" + this.state.valueFilter);\n      request.then(resp => {\n        this.setState({\n          movie: resp.data.results\n        });\n        let args = Array.prototype.slice.call(resp.data.results);\n        args = [].slice.call(resp.data.results);\n        args = Array.from(resp.data.results);\n        args.sort(function (a, b) {\n          return a.title > b.title ? 1 : b.title > a.title ? -1 : 0;\n        });\n        this.setState({\n          movie: args\n        });\n      });\n    }\n  }\n\n  render() {\n    const arrayGenres = this.mountArrayGenres();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div-filter\",\n        children: [\"Filter by Genre or Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"div-filter-input\",\n          type: \"text\",\n          onChange: this.filterGenreTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), this.state.movie.sort().map(data => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div-movies\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: data.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"http://image.tmdb.org/t/p/w185/\" + data.poster_path,\n              alt: data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Release Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 39\n              }, this), \" \", data.release_date, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Genre:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 39\n              }, this), \" \", data.genre_ids.map(genre => {\n                return arrayGenres[genre] + \" / \";\n              }), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div-overview\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: data.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 32\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["C:/Users/joaot/OneDrive/√Årea de Trabalho/prjQuickDev/view_movies/src/components/apiMovies.js"],"names":["React","Component","axios","Movie","constructor","props","componentDidMount","getMovies","getGenres","get","then","resp","console","log","request","state","api_key","respGenres","setState","genres","data","mountArrayGenres","arrayGenres","forEach","element","id","name","filterGenreTitle","event","valueFilter","target","value","indexOf","replace","movie","componentDidUpdate","length","results","args","Array","prototype","slice","call","from","sort","a","b","title","render","map","poster_path","release_date","genre_ids","genre","overview"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Movie extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            movie: [],\r\n            genres: [],\r\n            api_key: \"4ec327e462149c3710d63be84b81cf4f\",\r\n            valueFilter: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getMovies()\r\n        this.getGenres()\r\n        //this.getApiKey()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n        if (this.state.valueFilter.indexOf(' ') >= 0) {\r\n            this.setState({ valueFilter: this.state.valueFilter.replace(' ', '+') });\r\n        }\r\n\r\n        if (this.state.valueFilter.length > 0) {\r\n            const request = axios.get(\"https://api.themoviedb.org/3/search/movie?api_key=\" + this.state.api_key + \"&query=\" + this.state.valueFilter)\r\n            request.then((resp) => {\r\n                this.setState({ movie: resp.data.results });\r\n\r\n                let args = Array.prototype.slice.call(resp.data.results);\r\n                args = [].slice.call(resp.data.results);\r\n                args = Array.from(resp.data.results);\r\n\r\n                args.sort(function (a, b) {\r\n                    return (a.title > b.title) ? 1 : ((b.title > a.title) ? -1 : 0);\r\n                });\r\n\r\n                this.setState({ movie: args });\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    getMovies = () => {\r\n        axios.get(\"http://127.0.0.1:8000/api/movies\").then((resp) => {\r\n            //this.setState({ genres: respGenres.data.genres });\r\n            console.log(resp)\r\n            \r\n            // let args = Array.prototype.slice.call(resp.data.results);\r\n            // args = [].slice.call(resp.data.results);\r\n            // args = Array.from(resp.data.results);\r\n\r\n            // args.sort(function (a, b) {\r\n            //     return (a.title > b.title) ? 1 : ((b.title > a.title) ? -1 : 0);\r\n            // });\r\n\r\n            // this.setState({ movie: args });\r\n\r\n        })\r\n    }\r\n\r\n    // getMovies = () => {\r\n\r\n    //     const request = axios.get(\"https://api.themoviedb.org/3/movie/popular?api_key=\" + this.state.api_key)\r\n    //     request.then((resp) => {\r\n           \r\n    //         let args = Array.prototype.slice.call(resp.data.results);\r\n    //         args = [].slice.call(resp.data.results);\r\n    //         args = Array.from(resp.data.results);\r\n\r\n    //         args.sort(function (a, b) {\r\n    //             return (a.title > b.title) ? 1 : ((b.title > a.title) ? -1 : 0);\r\n    //         });\r\n\r\n    //         this.setState({ movie: args });\r\n    //     })\r\n    // }\r\n\r\n    getGenres = () => {\r\n        const request = axios.get(\"https://api.themoviedb.org/3/genre/movie/list?api_key=\" + this.state.api_key)\r\n        request.then((respGenres) => {\r\n\r\n            this.setState({ genres: respGenres.data.genres });\r\n            //console.log(this.state.genres)\r\n\r\n        })\r\n    }\r\n\r\n    mountArrayGenres = () => {\r\n        let arrayGenres = []\r\n        this.state.genres.forEach(element => {\r\n            arrayGenres[element.id] = element.name\r\n        });\r\n\r\n        return arrayGenres\r\n    }\r\n\r\n    filterGenreTitle = (event) => {\r\n\r\n        this.setState({ valueFilter: event.target.value });\r\n\r\n        if (this.state.valueFilter.indexOf(' ') >= 0) {\r\n            this.setState({ valueFilter: this.state.valueFilter.replace(' ', '+') });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const arrayGenres = this.mountArrayGenres()\r\n        return (\r\n            <div>\r\n                <div className=\"div-filter\">\r\n\r\n                    Filter by Genre or Title:\r\n                        <input\r\n                        class=\"div-filter-input\"\r\n                        type=\"text\"\r\n                        onChange={this.filterGenreTitle}\r\n                    />\r\n\r\n                </div>\r\n                {\r\n                    this.state.movie.sort().map((data) => {\r\n                        return <div className=\"div-movies\">\r\n                            <div>\r\n                                <span><b>{data.title}</b></span>\r\n                            </div>\r\n                            <div>\r\n                                <img src={\"http://image.tmdb.org/t/p/w185/\" + data.poster_path} alt={data.title} />\r\n                            </div>\r\n                            <div>\r\n                                <span><b>Release Date:</b> {data.release_date} </span>\r\n                                <span><b>Genre:</b> {\r\n                                    data.genre_ids.map((genre) => {\r\n                                        return arrayGenres[genre] + \" / \"\r\n                                    })\r\n                                } </span>\r\n                            </div>\r\n                            <div id=\"div-overview\">\r\n                                <span>{data.overview}</span>\r\n                            </div>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Movie;"]},"metadata":{},"sourceType":"module"}