{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaot\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\prjQuickDev\\\\view_movies\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Movie from './components/apiMovies';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getMovies();\n      this.getGenres();\n    };\n\n    this.componentDidUpdate = () => {\n      this.getMovies();\n      this.getGenres();\n    };\n\n    this.getMovies = () => {\n      if (this.props.valueFilter != undefined) {\n        //alert(this.props.valueFilte)\n        console.log(this.props.valueFilte);\n      } else {\n        const request = axios.get(\"https://api.themoviedb.org/3/movie/popular?api_key=\" + this.state.api_key);\n        request.then(resp => {\n          this.setState({\n            movie: resp.data.results\n          }); //console.log(this.state.movie.sort())\n        });\n      }\n    };\n\n    this.getGenres = () => {\n      const request = axios.get(\"https://api.themoviedb.org/3/genre/movie/list?api_key=\" + this.state.api_key);\n      request.then(respGenres => {\n        this.setState({\n          genres: respGenres.data.genres\n        }); //console.log(this.state.genres)\n      });\n    };\n\n    this.moutArrayGenres = () => {\n      let arrayGenres = [];\n      this.state.genres.forEach(element => {\n        arrayGenres[element.id] = element.name;\n      });\n      return arrayGenres;\n    };\n\n    state = {\n      movie: [],\n      genres: [],\n      api_key: \"4ec327e462149c3710d63be84b81cf4f\"\n    };\n    this.filterGenreTitle = this.filterGenreTitle.bind(this);\n    this.filterGenreTitleSubmit = this.filterGenreTitleSubmit.bind(this);\n  }\n\n  filterGenreTitle(event) {\n    this.state.value = event.target.value;\n  }\n\n  filterGenreTitleSubmit(event) {\n    this.state.valueFilter = this.state.value;\n    event.preventDefault();\n  }\n\n  render() {\n    const arrayGenres = this.moutArrayGenres();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div-filter\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.filterGenreTitleSubmit,\n          children: [\"Filter for Genre or Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"div-filter-input\",\n            type: \"text\",\n            onChange: this.filterGenreTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), this.state.movie.map(data => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div-movies\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: data.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"http://image.tmdb.org/t/p/w185/\" + data.poster_path,\n              alt: data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Release Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 23\n              }, this), \" \", data.release_date, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Genre:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 23\n              }, this), \" \", data.genre_ids.map(genre => {\n                return arrayGenres[genre] + \" / \";\n              }), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div-overview\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: data.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/joaot/OneDrive/√Årea de Trabalho/prjQuickDev/view_movies/src/App.js"],"names":["React","Component","Movie","axios","App","constructor","props","componentDidMount","getMovies","getGenres","componentDidUpdate","valueFilter","undefined","console","log","valueFilte","request","get","state","api_key","then","resp","setState","movie","data","results","respGenres","genres","moutArrayGenres","arrayGenres","forEach","element","id","name","filterGenreTitle","bind","filterGenreTitleSubmit","event","value","target","preventDefault","render","map","title","poster_path","release_date","genre_ids","genre","overview"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Movie from './components/apiMovies'\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component \n{\n\n  constructor(props) {\n    super(props)\n    state = {\n      movie: [],\n      genres: [],\n      api_key: \"4ec327e462149c3710d63be84b81cf4f\",\n    }\n    this.filterGenreTitle = this.filterGenreTitle.bind(this);\n    this.filterGenreTitleSubmit = this.filterGenreTitleSubmit.bind(this);\n  }\n\n\n  filterGenreTitle(event) {\n    this.state.value = event.target.value\n  }\n\n  filterGenreTitleSubmit(event) {\n    this.state.valueFilter = this.state.value\n    event.preventDefault();\n\n  }\n\n  componentDidMount = () => {\n    this.getMovies()\n    this.getGenres()\n  }\n\n  componentDidUpdate = () => {\n    this.getMovies()\n    this.getGenres()\n  }\n\n  getMovies = () => {\n\n    if (this.props.valueFilter != undefined) {\n\n      //alert(this.props.valueFilte)\n      console.log(this.props.valueFilte)\n\n    } else {\n      const request = axios.get(\"https://api.themoviedb.org/3/movie/popular?api_key=\" + this.state.api_key)\n      request.then((resp) => {\n        this.setState({ movie: resp.data.results });\n        //console.log(this.state.movie.sort())\n\n      })\n    }\n\n\n  }\n\n  getGenres = () => {\n    const request = axios.get(\"https://api.themoviedb.org/3/genre/movie/list?api_key=\" + this.state.api_key)\n    request.then((respGenres) => {\n      this.setState({ genres: respGenres.data.genres });\n      //console.log(this.state.genres)\n\n    })\n  }\n\n  moutArrayGenres = () => {\n    let arrayGenres = []\n    this.state.genres.forEach(element => {\n      arrayGenres[element.id] = element.name\n    });\n\n    return arrayGenres\n  }\n\n  render() {\n\n    const arrayGenres = this.moutArrayGenres()\n    return (\n      <div >\n        <div className=\"div-filter\">\n\n          <form onSubmit={this.filterGenreTitleSubmit}>\n\n            Filter for Genre or Title:\n              <input\n              class=\"div-filter-input\"\n              type=\"text\"\n              onChange={this.filterGenreTitle}\n            />\n\n            <button type=\"submit\">\n              Filter\n           </button>\n          </form>\n        </div>\n        {\n          this.state.movie.map((data) => {\n            return <div className=\"div-movies\">\n              <div>\n                <span><b>{data.title}</b></span>\n              </div>\n              <div>\n                <img src={\"http://image.tmdb.org/t/p/w185/\" + data.poster_path} alt={data.title} />\n              </div>\n              <div>\n                <span><b>Release Date:</b> {data.release_date} </span>\n                <span><b>Genre:</b> {\n                  data.genre_ids.map((genre) => {\n                    return arrayGenres[genre] + \" / \"\n                  })\n                } </span>\n              </div>\n              <div id=\"div-overview\">\n                <span>{data.overview}</span>\n              </div>\n            </div>\n          })\n        }\n      </div>\n    )\n  }\n\n}export default App\n\n"]},"metadata":{},"sourceType":"module"}