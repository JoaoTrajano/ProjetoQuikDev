{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaot\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\prjQuickDev\\\\view_movies\\\\src\\\\components\\\\apiMovies.js\";\nimport React, { Component } from 'react';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport Details from '../Pages/Home/details';\nimport Filter from './filter';\nimport routesConfig from '../routerconfig';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Movie extends Component {\n  constructor(props) {\n    super();\n\n    this.componentDidMount = () => {\n      this.getMovies();\n      this.getGenres();\n      alert(this.state.flag);\n    };\n\n    this.getMovies = () => {\n      axios.get(\"http://127.0.0.1:8000/api/movies\").then(resp => {\n        let args = Array.prototype.slice.call(resp.data[0].results);\n        args = [].slice.call(resp.data[0].results);\n        args = Array.from(resp.data[0].results);\n        args.sort(function (a, b) {\n          return a.title > b.title ? 1 : b.title > a.title ? -1 : 0;\n        });\n        this.setState({\n          movie: args\n        });\n      });\n    };\n\n    this.getGenres = () => {\n      const request = axios.get(\"http://127.0.0.1:8000/api/movies/genre\");\n      request.then(respGenres => {\n        this.setState({\n          genres: respGenres.data[0].genres\n        });\n      });\n    };\n\n    this.mountArrayGenres = () => {\n      let arrayGenres = [];\n      this.state.genres.forEach(element => {\n        arrayGenres[element.id] = element.name;\n      });\n      return arrayGenres;\n    };\n\n    this.filterGenreTitle = event => {\n      this.setState({\n        valueFilter: event.target.value\n      });\n\n      if (this.state.valueFilter.indexOf(' ') >= 0) {\n        this.setState({\n          valueFilter: this.state.valueFilter.replace(' ', '+')\n        });\n      }\n    };\n\n    this.trocar = event => {\n      this.setState({\n        flag: false\n      });\n      alert(this.state.flag);\n    };\n\n    this.state = {\n      movie: [],\n      genres: [],\n      valueFilter: '',\n      flag: true\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.valueFilter.indexOf(' ') >= 0) {\n      this.setState({\n        valueFilter: this.state.valueFilter.replace(' ', '+')\n      });\n    }\n\n    if (this.state.valueFilter.length > 0) {\n      const request = axios.get(\"http://127.0.0.1:8000/api/movies/\" + this.state.valueFilter);\n      request.then(resp => {\n        this.setState({\n          movie: resp.data[0].results\n        });\n        let args = Array.prototype.slice.call(resp.data[0].results);\n        args = [].slice.call(resp.data[0].results);\n        args = Array.from(resp.data[0].results);\n        args.sort(function (a, b) {\n          return a.title > b.title ? 1 : b.title > a.title ? -1 : 0;\n        });\n        this.setState({\n          movie: args\n        });\n      });\n    }\n  }\n\n  render() {\n    const arrayGenres = this.mountArrayGenres();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Filter, {\n        filterGenreTitle: this.filterGenreTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), this.state.movie.sort().map(data => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div-movies\",\n          children: [/*#__PURE__*/_jsxDEV(Details, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/details\",\n              target: \"_blank\",\n              onClick: this.trocar,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: data.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"http://image.tmdb.org/t/p/w185/\" + data.poster_path,\n              alt: data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Release Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 39\n              }, this), \" \", data.release_date, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Genre:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 39\n              }, this), \" \", data.genre_ids.map(genre => {\n                return arrayGenres[genre] + \" / \";\n              }), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div-overview\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: data.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), routesConfig.map((value, key) => {\n            return /*#__PURE__*/_jsxDEV(Switch, {\n              children: /*#__PURE__*/_jsxDEV(Route, {\n                path: value.path,\n                render: props => /*#__PURE__*/_jsxDEV(Details, { ...props,\n                  name: \"Joao\",\n                  id: data.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 60\n                }, this)\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 32\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["C:/Users/joaot/OneDrive/√Årea de Trabalho/prjQuickDev/view_movies/src/components/apiMovies.js"],"names":["React","Component","Link","Route","Switch","Details","Filter","routesConfig","axios","Movie","constructor","props","componentDidMount","getMovies","getGenres","alert","state","flag","get","then","resp","args","Array","prototype","slice","call","data","results","from","sort","a","b","title","setState","movie","request","respGenres","genres","mountArrayGenres","arrayGenres","forEach","element","id","name","filterGenreTitle","event","valueFilter","target","value","indexOf","replace","trocar","componentDidUpdate","length","render","map","poster_path","release_date","genre_ids","genre","overview","key","path"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, Route, Switch } from 'react-router-dom'\r\nimport Details from '../Pages/Home/details'\r\nimport Filter from './filter'\r\nimport routesConfig from '../routerconfig';\r\nimport axios from 'axios';\r\n\r\nclass Movie extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            movie: [],\r\n            genres: [],\r\n            valueFilter: '',\r\n            flag: true\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getMovies()\r\n        this.getGenres()\r\n\r\n        alert(this.state.flag)\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n        if (this.state.valueFilter.indexOf(' ') >= 0) {\r\n            this.setState({ valueFilter: this.state.valueFilter.replace(' ', '+') });\r\n        }\r\n\r\n        if (this.state.valueFilter.length > 0) {\r\n\r\n            const request = axios.get(\"http://127.0.0.1:8000/api/movies/\" + this.state.valueFilter)\r\n            request.then((resp) => {\r\n                this.setState({ movie: resp.data[0].results });\r\n\r\n                let args = Array.prototype.slice.call(resp.data[0].results);\r\n                args = [].slice.call(resp.data[0].results);\r\n                args = Array.from(resp.data[0].results);\r\n\r\n                args.sort(function (a, b) {\r\n                    return (a.title > b.title) ? 1 : ((b.title > a.title) ? -1 : 0);\r\n                });\r\n\r\n                this.setState({ movie: args });\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    getMovies = () => {\r\n        axios.get(\"http://127.0.0.1:8000/api/movies\").then((resp) => {\r\n\r\n            let args = Array.prototype.slice.call(resp.data[0].results);\r\n            args = [].slice.call(resp.data[0].results);\r\n            args = Array.from(resp.data[0].results);\r\n\r\n            args.sort(function (a, b) {\r\n                return (a.title > b.title) ? 1 : ((b.title > a.title) ? -1 : 0);\r\n            });\r\n\r\n            this.setState({ movie: args });\r\n\r\n        })\r\n    }\r\n\r\n    getGenres = () => {\r\n        const request = axios.get(\"http://127.0.0.1:8000/api/movies/genre\")\r\n        request.then((respGenres) => {\r\n            this.setState({ genres: respGenres.data[0].genres });\r\n        })\r\n    }\r\n\r\n    mountArrayGenres = () => {\r\n        let arrayGenres = []\r\n        this.state.genres.forEach(element => {\r\n            arrayGenres[element.id] = element.name\r\n        });\r\n\r\n        return arrayGenres\r\n    }\r\n\r\n    filterGenreTitle = (event) => {\r\n\r\n        this.setState({ valueFilter: event.target.value });\r\n\r\n        if (this.state.valueFilter.indexOf(' ') >= 0) {\r\n            this.setState({ valueFilter: this.state.valueFilter.replace(' ', '+') });\r\n        }\r\n\r\n    }\r\n\r\n    trocar = (event) => {\r\n        this.setState({ flag: false })\r\n        alert(this.state.flag)\r\n    }\r\n\r\n    render() {\r\n\r\n        const arrayGenres = this.mountArrayGenres()\r\n        return (\r\n            <div>\r\n                <Filter filterGenreTitle={this.filterGenreTitle} />\r\n                {\r\n                    this.state.movie.sort().map((data) => {\r\n                        return <div className=\"div-movies\">\r\n                            {<Details />}\r\n                            <div>\r\n                                <Link to=\"/details\" target=\"_blank\" onClick={this.trocar}\r\n                                >\r\n                                    <span>\r\n                                        <b>{data.title}</b>\r\n                                    </span>\r\n                                </Link>\r\n                            </div>\r\n                            <div>\r\n                                <img src={\"http://image.tmdb.org/t/p/w185/\" + data.poster_path} alt={data.title} />\r\n                            </div>\r\n                            <div>\r\n                                <span><b>Release Date:</b> {data.release_date} </span>\r\n                                <span><b>Genre:</b> {\r\n                                    data.genre_ids.map((genre) => {\r\n                                        return arrayGenres[genre] + \" / \"\r\n                                    })\r\n                                } </span>\r\n                            </div>\r\n                            <div id=\"div-overview\">\r\n                                <span>{data.overview}</span>\r\n                            </div>\r\n                            {routesConfig.map((value, key) => {\r\n                                return <Switch>\r\n                                    <Route\r\n                                        key={key}\r\n                                        path={value.path}\r\n                                        render={(props) => <Details {...props} name=\"Joao\" id={data.id} />}></Route>\r\n                                </Switch>\r\n                            })}\r\n\r\n                        </div>\r\n                    })\r\n\r\n\r\n                }\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Movie;"]},"metadata":{},"sourceType":"module"}