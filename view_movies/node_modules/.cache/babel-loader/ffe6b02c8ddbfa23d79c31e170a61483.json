{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaot\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\prjQuickDev\\\\view_movies\\\\src\\\\components\\\\apiMovies.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Movie extends Component {\n  constructor(props) {\n    this.state = {\n      movie: [],\n      genres: [],\n      api_key: \"4ec327e462149c3710d63be84b81cf4f\",\n      valueFilter: ''\n    };\n  }\n\n  componentDidUpdate() {\n    console.log(\"Updated!\");\n    this.filterGenreTitle();\n  }\n\n  render() {\n    const arrayGenres = this.mountArrayGenres();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div-filter\",\n        children: [\"Filter for Genre or Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"div-filter-input\",\n          type: \"text\",\n          onChange: this.filterGenreTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), this.state.movie.map(data => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div-movies\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: data.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"http://image.tmdb.org/t/p/w185/\" + data.poster_path,\n              alt: data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Release Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 39\n              }, this), \" \", data.release_date, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Genre:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 39\n              }, this), \" \", data.genre_ids.map(genre => {\n                return arrayGenres[genre] + \" / \";\n              }), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div-overview\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: data.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 32\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["C:/Users/joaot/OneDrive/Área de Trabalho/prjQuickDev/view_movies/src/components/apiMovies.js"],"names":["React","Component","axios","Movie","constructor","props","state","movie","genres","api_key","valueFilter","componentDidUpdate","console","log","filterGenreTitle","render","arrayGenres","mountArrayGenres","map","data","title","poster_path","release_date","genre_ids","genre","overview"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAE1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,MAAM,EAAE,EAFC;AAGTC,MAAAA,OAAO,EAAE,kCAHA;AAITC,MAAAA,WAAW,EAAE;AAJJ,KAAb;AAMH;;AAQDC,EAAAA,kBAAkB,GAAG;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,SAAKC,gBAAL;AACH;;AAsDDC,EAAAA,MAAM,GAAG;AAEL,UAAMC,WAAW,GAAG,KAAKC,gBAAL,EAApB;AACA,wBACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,8DAGQ;AACA,UAAA,KAAK,EAAC,kBADN;AAEA,UAAA,IAAI,EAAC,MAFL;AAGA,UAAA,QAAQ,EAAE,KAAKH;AAHf;AAAA;AAAA;AAAA;AAAA,gBAHR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAYQ,KAAKR,KAAL,CAAWC,KAAX,CAAiBW,GAAjB,CAAsBC,IAAD,IAAU;AAC3B,4BAAO;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACH;AAAA,mCACI;AAAA,qCAAM;AAAA,0BAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADG,eAIH;AAAA,mCACI;AAAK,cAAA,GAAG,EAAE,oCAAoCD,IAAI,CAACE,WAAnD;AAAgE,cAAA,GAAG,EAAEF,IAAI,CAACC;AAA1E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJG,eAOH;AAAA,oCACI;AAAA,sCAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAN,OAA4BD,IAAI,CAACG,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,sCAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAN,OACIH,IAAI,CAACI,SAAL,CAAeL,GAAf,CAAoBM,KAAD,IAAW;AAC1B,uBAAOR,WAAW,CAACQ,KAAD,CAAX,GAAqB,KAA5B;AACH,eAFD,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPG,eAeH;AAAK,YAAA,EAAE,EAAC,cAAR;AAAA,mCACI;AAAA,wBAAOL,IAAI,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAfG;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAmBH,OApBD,CAZR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqCH;;AAlHyB;;AAsH9B,eAAetB,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Movie extends Component {\r\n\r\n    constructor(props) {\r\n        this.state = {\r\n            movie: [],\r\n            genres: [],\r\n            api_key: \"4ec327e462149c3710d63be84b81cf4f\",\r\n            valueFilter: ''\r\n        }\r\n    }\r\n    \r\n\r\n    componentDidMount = () => {\r\n        this.getMovies()\r\n        this.getGenres()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"Updated!\");\r\n        this.filterGenreTitle()\r\n    }\r\n\r\n    getMovies = () => {\r\n\r\n        const request = axios.get(\"https://api.themoviedb.org/3/movie/popular?api_key=\" + this.state.api_key)\r\n        request.then((resp) => {\r\n            this.setState({ movie: resp.data.results });\r\n            //console.log(this.state.movie.sort())\r\n\r\n        })\r\n    }\r\n\r\n    getGenres = () => {\r\n        const request = axios.get(\"https://api.themoviedb.org/3/genre/movie/list?api_key=\" + this.state.api_key)\r\n        request.then((respGenres) => {\r\n            this.setState({ genres: respGenres.data.genres });\r\n            //console.log(this.state.genres)\r\n\r\n        })\r\n    }\r\n\r\n    mountArrayGenres = () => {\r\n        let arrayGenres = []\r\n        this.state.genres.forEach(element => {\r\n            arrayGenres[element.id] = element.name\r\n        });\r\n\r\n        return arrayGenres\r\n    }\r\n\r\n    filterGenreTitle = (event) => {\r\n        if(event.target !== undefined) {\r\n\r\n            this.setState({ valueFilter: event.target.value });\r\n\r\n            if (this.state.valueFilter.indexOf(' ') >= 0) {\r\n                this.setState({ valueFilter: this.state.valueFilter.replace(' ', '+') });\r\n    \r\n                // componentDidUpdate = () => {\r\n                //     const request = axios.get(\"https://api.themoviedb.org/3/movie/popular?api_key=\" + this.state.api_key + \"&query=\" + this.state.valueFilter)\r\n                //     request.then((resp) => {\r\n                //         this.setState({ movie: resp.data.results });\r\n                //         console.log(this.state.movie.sort())\r\n    \r\n                //     })\r\n                // }\r\n            }\r\n    \r\n            console.log(this.state.valueFilter)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const arrayGenres = this.mountArrayGenres()\r\n        return (\r\n            <div>\r\n                <div className=\"div-filter\">\r\n\r\n                    Filter for Genre or Title:\r\n                        <input\r\n                        class=\"div-filter-input\"\r\n                        type=\"text\"\r\n                        onChange={this.filterGenreTitle}\r\n                    />\r\n\r\n                </div>\r\n                {\r\n                    this.state.movie.map((data) => {\r\n                        return <div className=\"div-movies\">\r\n                            <div>\r\n                                <span><b>{data.title}</b></span>\r\n                            </div>\r\n                            <div>\r\n                                <img src={\"http://image.tmdb.org/t/p/w185/\" + data.poster_path} alt={data.title} />\r\n                            </div>\r\n                            <div>\r\n                                <span><b>Release Date:</b> {data.release_date} </span>\r\n                                <span><b>Genre:</b> {\r\n                                    data.genre_ids.map((genre) => {\r\n                                        return arrayGenres[genre] + \" / \"\r\n                                    })\r\n                                } </span>\r\n                            </div>\r\n                            <div id=\"div-overview\">\r\n                                <span>{data.overview}</span>\r\n                            </div>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Movie;"]},"metadata":{},"sourceType":"module"}