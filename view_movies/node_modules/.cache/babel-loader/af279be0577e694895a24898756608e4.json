{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaot\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\prjQuickDev\\\\view_movies\\\\src\\\\components\\\\apiMovies.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Movie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: [],\n      genres: [],\n      api_key: \"4ec327e462149c3710d63be84b81cf4f\"\n    };\n\n    this.componentDidMount = () => {\n      this.getMovies();\n      this.getGenres();\n    };\n\n    this.getMovies = () => {\n      const request = axios.get(\"https://api.themoviedb.org/3/movie/\" + \"popular?\" + \"api_key=\" + this.state.api_key);\n      request.then(resp => {\n        this.setState({\n          movie: resp.data.results\n        });\n        console.log(this.state.movie.sort());\n      });\n    };\n\n    this.getGenres = () => {\n      const request = axios.get(\"https://api.themoviedb.org/3/genre/movie/list?api_key=\" + this.state.api_key);\n      request.then(respGenres => {\n        this.setState({\n          genres: respGenres.data.genres\n        }); //console.log(this.state.genres)\n      });\n    };\n\n    this.moutArrayGenres = () => {\n      let arrayGenres = [];\n      this.state.genres.forEach(element => {\n        arrayGenres[element.id] = element.name;\n      });\n      return arrayGenres;\n    };\n  }\n\n  render() {\n    const arrayGenres = this.moutArrayGenres();\n    alert(this.props.valueFilter);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.movie.map(data => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div-movies\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: data.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"http://image.tmdb.org/t/p/w185/\" + data.poster_path,\n              alt: data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Release Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 39\n              }, this), \" \", data.release_date, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Genre:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 39\n              }, this), \" \", data.genre_ids.map(genre => {\n                return arrayGenres[genre] + \" / \";\n              }), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div-overview\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: data.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["C:/Users/joaot/OneDrive/Área de Trabalho/prjQuickDev/view_movies/src/components/apiMovies.js"],"names":["React","Component","axios","Movie","state","movie","genres","api_key","componentDidMount","getMovies","getGenres","request","get","then","resp","setState","data","results","console","log","sort","respGenres","moutArrayGenres","arrayGenres","forEach","element","id","name","render","alert","props","valueFilter","map","title","poster_path","release_date","genre_ids","genre","overview"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Movie extends Component {\r\n\r\n    state = {\r\n        movie: [],\r\n        genres: [],\r\n        api_key: \"4ec327e462149c3710d63be84b81cf4f\",\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getMovies()\r\n        this.getGenres()\r\n        \r\n    }\r\n\r\n    getMovies = () => {\r\n        const request = axios.get(\"https://api.themoviedb.org/3/movie/\" + \"popular?\"  + \"api_key=\" + this.state.api_key)\r\n        request.then((resp) => {\r\n            this.setState({ movie: resp.data.results });\r\n            console.log(this.state.movie.sort())\r\n\r\n        })\r\n    }\r\n\r\n    getGenres = () => {\r\n        const request = axios.get(\"https://api.themoviedb.org/3/genre/movie/list?api_key=\" + this.state.api_key)\r\n        request.then((respGenres) => {\r\n            this.setState({ genres: respGenres.data.genres });\r\n            //console.log(this.state.genres)\r\n\r\n        })\r\n    }\r\n\r\n    moutArrayGenres = () => {\r\n        let arrayGenres = []\r\n        this.state.genres.forEach(element => {\r\n            arrayGenres[element.id] = element.name\r\n        });\r\n\r\n        return arrayGenres\r\n    }\r\n\r\n    render() {\r\n\r\n        const arrayGenres = this.moutArrayGenres()\r\n\r\n        alert(this.props.valueFilter)\r\n\r\n        return (\r\n            <div >\r\n                {\r\n                    this.state.movie.map((data) => {\r\n                        return <div className=\"div-movies\">\r\n                            <div>\r\n                                <span><b>{data.title}</b></span>\r\n                            </div>\r\n                            <div>\r\n                                <img src={\"http://image.tmdb.org/t/p/w185/\" + data.poster_path} alt={data.title} />\r\n                            </div>\r\n                            <div>\r\n                                <span><b>Release Date:</b> {data.release_date} </span>\r\n                                <span><b>Genre:</b> {\r\n                                    data.genre_ids.map((genre) => {\r\n                                        return arrayGenres[genre] + \" / \"\r\n                                    })\r\n                                } </span>\r\n                            </div>\r\n                            <div id=\"div-overview\">\r\n                                <span>{data.overview}</span>\r\n                            </div>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Movie;"]},"metadata":{},"sourceType":"module"}