{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaot\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\prjQuickDev\\\\view_movies\\\\src\\\\components\\\\apiMovies.js\";\nimport React, { Component } from 'react';\nimport Filter from './filter';\nimport Movies from './movie';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ApiMovie extends Component {\n  constructor(props) {\n    super();\n\n    this.componentDidMount = () => {\n      this.getMovies();\n      this.getGenres();\n    };\n\n    this.getMovies = () => {\n      axios.get(\"http://127.0.0.1:8000/api/movies\").then(resp => {\n        let args = Array.prototype.slice.call(resp.data.results);\n        args = [].slice.call(resp.data.results);\n        args = Array.from(resp.data.results);\n        args.sort(function (a, b) {\n          return a.title > b.title ? 1 : b.title > a.title ? -1 : 0;\n        });\n        this.setState({\n          movie: args\n        });\n      });\n    };\n\n    this.getGenres = () => {\n      const request = axios.get(\"http://127.0.0.1:8000/api/movies/genre\");\n      request.then(respGenres => {\n        this.setState({\n          genres: respGenres.data.genres\n        });\n      });\n    };\n\n    this.mountArrayGenres = () => {\n      let arrayGenres = [];\n      this.state.genres.forEach(element => {\n        arrayGenres[element.id] = element.name;\n      });\n      return arrayGenres;\n    };\n\n    this.filterGenreTitle = event => {\n      this.setState({\n        valueFilter: event.target.value\n      });\n\n      if (this.state.valueFilter.indexOf(' ') >= 0) {\n        this.setState({\n          valueFilter: this.state.valueFilter.replace(' ', '+')\n        });\n      }\n    };\n\n    this.state = {\n      movie: [],\n      genres: [],\n      valueFilter: ''\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.valueFilter.indexOf(' ') >= 0) {\n      this.setState({\n        valueFilter: this.state.valueFilter.replace(' ', '+')\n      });\n    }\n\n    if (this.state.valueFilter.length > 0) {\n      const request = axios.get(\"http://127.0.0.1:8000/api/movies/\" + this.state.valueFilter);\n      request.then(resp => {\n        this.setState({\n          movie: resp.data[0].results\n        });\n        let args = Array.prototype.slice.call(resp.data[0].results);\n        args = [].slice.call(resp.data[0].results);\n        args = Array.from(resp.data[0].results);\n        args.sort(function (a, b) {\n          return a.title > b.title ? 1 : b.title > a.title ? -1 : 0;\n        });\n        this.setState({\n          movie: args\n        });\n      });\n    }\n\n    if (!this.state.flag) {\n      this.state.flag = false;\n    }\n  }\n\n  render() {\n    const arrayGenres = this.mountArrayGenres();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Filter, {\n        filterGenreTitle: this.filterGenreTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), this.state.movie.map(data => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div-movies\",\n          children: /*#__PURE__*/_jsxDEV(Movies, {\n            nameMovie: data.title,\n            trocar: this.trocar,\n            poster: data.poster_path,\n            nameAlt: data.title,\n            dateRelease: data.release_date,\n            genres: data.genre_ids,\n            genresArray: arrayGenres,\n            resumo: data.overview,\n            id: data.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 32\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ApiMovie;","map":{"version":3,"sources":["C:/Users/joaot/OneDrive/Área de Trabalho/prjQuickDev/view_movies/src/components/apiMovies.js"],"names":["React","Component","Filter","Movies","axios","ApiMovie","constructor","props","componentDidMount","getMovies","getGenres","get","then","resp","args","Array","prototype","slice","call","data","results","from","sort","a","b","title","setState","movie","request","respGenres","genres","mountArrayGenres","arrayGenres","state","forEach","element","id","name","filterGenreTitle","event","valueFilter","target","value","indexOf","replace","componentDidUpdate","length","flag","render","map","trocar","poster_path","release_date","genre_ids","overview"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Filter from './filter'\r\nimport Movies from './movie'\r\nimport axios from 'axios';\r\n\r\nclass ApiMovie extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            movie: [],\r\n            genres: [],\r\n            valueFilter: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getMovies()\r\n        this.getGenres()\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n        if (this.state.valueFilter.indexOf(' ') >= 0) {\r\n            this.setState({ valueFilter: this.state.valueFilter.replace(' ', '+') });\r\n        }\r\n\r\n        if (this.state.valueFilter.length > 0) {\r\n\r\n            const request = axios.get(\"http://127.0.0.1:8000/api/movies/\" + this.state.valueFilter)\r\n            request.then((resp) => {\r\n                this.setState({ movie: resp.data[0].results });\r\n\r\n                let args = Array.prototype.slice.call(resp.data[0].results);\r\n                args = [].slice.call(resp.data[0].results);\r\n                args = Array.from(resp.data[0].results);\r\n\r\n                args.sort(function (a, b) {\r\n                    return (a.title > b.title) ? 1 : ((b.title > a.title) ? -1 : 0);\r\n                });\r\n\r\n                this.setState({ movie: args });\r\n            })\r\n\r\n        }\r\n\r\n        if (!this.state.flag) {\r\n            this.state.flag = false\r\n        }\r\n    }\r\n\r\n    getMovies = () => {\r\n        axios.get(\"http://127.0.0.1:8000/api/movies\").then((resp) => {\r\n\r\n            let args = Array.prototype.slice.call(resp.data.results);\r\n            args = [].slice.call(resp.data.results);\r\n            args = Array.from(resp.data.results);\r\n\r\n            args.sort(function (a, b) {\r\n                return (a.title > b.title) ? 1 : ((b.title > a.title) ? -1 : 0);\r\n            });\r\n\r\n            this.setState({ movie: args });\r\n\r\n        })\r\n    }\r\n\r\n    getGenres = () => {\r\n        const request = axios.get(\"http://127.0.0.1:8000/api/movies/genre\")\r\n        request.then((respGenres) => {\r\n            this.setState({ genres: respGenres.data.genres });\r\n        })\r\n    }\r\n\r\n    mountArrayGenres = () => {\r\n        let arrayGenres = []\r\n        this.state.genres.forEach(element => {\r\n            arrayGenres[element.id] = element.name\r\n        });\r\n\r\n        return arrayGenres\r\n    }\r\n\r\n    filterGenreTitle = (event) => {\r\n\r\n        this.setState({ valueFilter: event.target.value });\r\n\r\n        if (this.state.valueFilter.indexOf(' ') >= 0) {\r\n            this.setState({ valueFilter: this.state.valueFilter.replace(' ', '+') });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const arrayGenres = this.mountArrayGenres()\r\n\r\n        return (\r\n            <div>\r\n                <Filter filterGenreTitle={this.filterGenreTitle} />\r\n                {\r\n                    this.state.movie.map((data) => {\r\n                        return <div className=\"div-movies\">\r\n                            {\r\n                                <Movies\r\n                                    nameMovie={data.title}\r\n                                    trocar={this.trocar}\r\n                                    poster={data.poster_path}\r\n                                    nameAlt={data.title}\r\n                                    dateRelease={data.release_date}\r\n                                    genres={data.genre_ids}\r\n                                    genresArray={arrayGenres}\r\n                                    resumo={data.overview}\r\n                                    id={data.id}\r\n                                />\r\n                            }\r\n                            \r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ApiMovie;"]},"metadata":{},"sourceType":"module"}